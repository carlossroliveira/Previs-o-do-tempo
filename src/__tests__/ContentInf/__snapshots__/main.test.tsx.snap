// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentInf Testing should match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c2 {
  margin-bottom: 3rem;
  font-weight: 600;
  font-style: italic;
}

.c0 {
  grid-area: contentInf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: center;
  border: 10px #EEEEEE dashed;
  border-radius: 15px;
  -webkit-transform: translateX(+50px);
  -ms-transform: translateX(+50px);
  transform: translateX(+50px);
  -webkit-animation: eQudGy 0.5s linear forwards;
  animation: eQudGy 0.5s linear forwards;
}

.c1 {
  text-transform: uppercase;
  color: #EEEEEE;
  font-family: Roboto,sans-serif;
}

@media (max-width:1025px) {
  .c0 {
    margin: 7rem 0;
    padding: 1rem;
  }
}

@media (max-width:870px) {
  .c0 {
    display: block;
    margin: 4rem;
  }
}

<body>
    <div>
      <section
        class="c0"
      >
        <h2
          class="c1"
        >
          Tema
        </h2>
        <p
          class="c2"
        >
          Dark
        </p>
        <div
          class=""
          style="position: relative; display: inline-block; text-align: left; opacity: 1; direction: ltr; border-radius: 14px; transition: opacity 0.25s; user-select: none;"
        >
          <div
            class="react-switch-bg"
            style="height: 28px; width: 56px; margin: 0px; position: relative; background: rgb(238, 238, 238); border-radius: 14px; cursor: pointer; transition: background 0.25s;"
          />
          <div
            class="react-switch-handle"
            style="height: 26px; width: 26px; background: rgb(57, 62, 70); display: inline-block; cursor: pointer; border-radius: 50%; position: absolute; transform: translateX(1px); top: 1px; outline: 0; border: 0px; transition: background-color 0.25s, transform 0.25s, box-shadow 0.15s;"
          />
          <input
            aria-checked="false"
            role="switch"
            style="border: 0px; height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px;"
            type="checkbox"
          />
        </div>
      </section>
    </div>
  </body>,
  "container": .c2 {
  margin-bottom: 3rem;
  font-weight: 600;
  font-style: italic;
}

.c0 {
  grid-area: contentInf;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: center;
  border: 10px #EEEEEE dashed;
  border-radius: 15px;
  -webkit-transform: translateX(+50px);
  -ms-transform: translateX(+50px);
  transform: translateX(+50px);
  -webkit-animation: eQudGy 0.5s linear forwards;
  animation: eQudGy 0.5s linear forwards;
}

.c1 {
  text-transform: uppercase;
  color: #EEEEEE;
  font-family: Roboto,sans-serif;
}

@media (max-width:1025px) {
  .c0 {
    margin: 7rem 0;
    padding: 1rem;
  }
}

@media (max-width:870px) {
  .c0 {
    display: block;
    margin: 4rem;
  }
}

<div>
    <section
      class="c0"
    >
      <h2
        class="c1"
      >
        Tema
      </h2>
      <p
        class="c2"
      >
        Dark
      </p>
      <div
        class=""
        style="position: relative; display: inline-block; text-align: left; opacity: 1; direction: ltr; border-radius: 14px; transition: opacity 0.25s; user-select: none;"
      >
        <div
          class="react-switch-bg"
          style="height: 28px; width: 56px; margin: 0px; position: relative; background: rgb(238, 238, 238); border-radius: 14px; cursor: pointer; transition: background 0.25s;"
        />
        <div
          class="react-switch-handle"
          style="height: 26px; width: 26px; background: rgb(57, 62, 70); display: inline-block; cursor: pointer; border-radius: 50%; position: absolute; transform: translateX(1px); top: 1px; outline: 0; border: 0px; transition: background-color 0.25s, transform 0.25s, box-shadow 0.15s;"
        />
        <input
          aria-checked="false"
          role="switch"
          style="border: 0px; height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px;"
          type="checkbox"
        />
      </div>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
